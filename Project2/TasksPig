
//TaskA
raw = LOAD 'pages.csv' USING PigStorage(',') AS (personID, name, nationality, countryCode, hobby);
filter = FILTER raw BY nationality == 'Grenada';
data = FOREACH filer GENERATE
    name, hobby;
STORE data INTO 'users.csv' USING PigStorage(',');


//TaskB
accessRaw = LOAD 'access_logs.csv' USING PigStorage(',') AS (accessID, byWho, whatPage, typeOfAccess, accessTime);
pagesRaw = LOAD 'pages.csv' USING PigStorage(',') AS (personID, name, nationality, countryCode, hobby);
accesses = GROUP accessRaw BY whatPage;
pageCounts = FOREACH accesses GENERATE group AS whatPage, COUNT(accessRaw) AS pagecount;
sort = ORDER pageCounts BY pageCount DESC;
topTen = LIMIT sort 10;
join = JOIN topTen BY whatPage, pagesRaw BY personID;
data = FOREACH join GENERATE
    pagesRaw::personID AS personID, pagesRaw::name AS name, personID::nationanlity AS nationality;
STORE data INTO 'top10.csv' USING PigStorage(',');


//TaskC
raw = LOAD 'pages.csv' USING PigStorage(',') AS (personID, name, nationality, countryCode, hobby);
countries = GROUP raw BY countryCode;
data = FOREACH countries GENERATE group AS countryCode, COUNT(raw) AS countryCounts
STORE data INTO 'countryCounts.csv' USING PigStorage(',');


//TaskD
friendsRaw = LOAD 'friends.csv' USING PigStorage(',') AS (friendRel, personID, myFriend, dateOfFriend, Desc);
pagesRaw = LOAD 'pages.csv' USING PigStorage(',') AS (personID, name, nationality, countryCode, hobby);
friends = GROUP freindsRaw BY myFriend;
data = FOREACH friends GENERATE group AS personID, COUNT(friendsRaw) AS count;
join = JOIN pagesRaw BY personID LEFT OUTER, data BY personID;
zeroData = data::count IS NULL ? 0 : data::count;
fdata = FOREACH join GENERATE
    pagesRaw::personID AS personID, zeroData AS count;
STORE fdata INTO 'connectedness.csv' USING PigStorage(',');


//TaskE
accessRaw = LOAD 'access_logs.csv' USING PigStorage(',') AS (accessID, byWho, whatPage, typeOfAccess, accessTime);
owner = GROUP accessRaw BY byWho;
unique = GROUP accessRaw BY (byWho, whatPage);
adata = FOREACH owner GENERATE
    group AS byWho,
    COUNT(accessRaw) AS totalAccesses;
ddata = FOREACH unique GENERATE
    group.byWho AS byWho,
    group.whatPage AS whatPage;
groupNow = GROUP ddata BY byWho;
disData = FOREACH groupNow GENERATE
    group AS byWho,
    COUNT(ddata) AS distinctPages;
join = JOIN adata BY byWho, disData BY byWho;
fdata = FOREACH join GENERATE
    adata::byWho AS byWho,
    adata::totalAccesses AS totalAccesses,
    disData::distinctPages AS distinctPages;
STORE fdata INTO 'favorites.csv' USING PigStorage(',');



//TaskF
friendsRaw = LOAD 'friends.csv' USING PigStorage(',') AS (friendRel, personID, myFriend, dateOfFriend, Desc);
pagesRaw = LOAD 'pages.csv' USING PigStorage(',') AS (personID, name, nationality, countryCode, hobby);
accessRaw = LOAD 'access_logs.csv' USING PigStorage(',') AS (accessID, byWho, whatPage, typeOfAccess, accessTime);
friends = FOREACH friendsRaw GENERATE personID, myFriend;
logs = FOREACH accessRaw GENERATE byWho, whatPage;
join = JOIN friends BY myFriend, logs BY byWho;
fAccess = FOREACH join GENERATE
    friends::personID AS personID,
    friends::myFriend AS myFriend;
frAccess = DISTINCT fAccess;
njoin = JOIN friends BY (personID, myFriend)
    LEFT OUTER, frAccess BY (personID, myFriend);
fNot = FILTER njoin BY frAccess::personID IS NULL;
fjoin = JOIN fNot BY personID, pagesRaw BY personID;
data = FOREACH fjoin GENERATE
    fNot::personID AS personID,
    pagesRaw::name AS name;
STORE data INTO 'notAccessedFriends.csv' USING PigStorage(',');

